FORMAT: 1A

# Open Banking API

## Vault [/vault]

### List Existing Tenants [GET /vault/tenant]

+ Response 200 (application/json)

        [
            "A",
            "B
        ]

### Create New Tenant [POST /vault/tenant/{tenant}]

+ Parameters
    + tenant (string) - ID of tenant to be created

+ Response 200 (application/json)
        
        {
        }

### Get Account [GET /vault/account/{tenant}/{account}]

+ Parameters
    + tenant (string) - ID of existing tenant
    + account (string) - ID of existing account

+ Response 200 (application/json)

        {
            "currency": "EUR",
            "balance": "1.000000000000000000000000000000000001",
            "blocking": "-0.000000000000000000000000000000000001",
            "isBalanceCheck": false
        }

### Create New Account [POST /vault/account/{tenant}]

+ Parameters
    + tenant (string) - ID of existing tenant

+ Request (application/json)
    + Headers

            Accept: application/json

    + Body

            {
                "name": "1234",
                "currency": "EUR",
                "isBalanceCheck": true
            }

+ Response 200 (application/json)

        {
        }

## Ledger [/ledger]

### List Existing Tenants [GET /ledger/tenant]

+ Response 200 (application/json)

        [
            "A",
            "B
        ]

### Create New Tenant [POST /ledger/tenant/{tenant}]

+ Parameters
    + tenant (string) - ID of tenant to be created

+ Response 200 (application/json)
        
        {}

### Get Transactions [GET /ledger/transaction/{tenant}}]

+ Parameters
    + tenant (string) - ID of existing tenant

+ Response 200 (application/json)

        [
            "unique_transaction_id"
        ]
        
### Get Transaction [GET /ledger/transaction/{tenant}/{transaction}}]

+ Parameters
    + tenant (string) - ID of existing tenant
    + transaction (string) - ID of existing transaction

+ Response 200 (application/json)

        {
            "id": "unique_transaction_id",
            "status": "committed",
            "transfers": [
                {
                    "id": "unique_transfer_id",
                    "valueDate": "2018-03-04T17:08:22Z",
                    "credit": {
                        "tenant": "A",
                        "name": "Credit"
                    },
                    "debit": {
                        "tenant": "B",
                        "name": "Debit"
                    },
                    "amount": "1",
                    "currency": "EUR"
                }
            ]
        }

### Create New Transaction [POST /ledger/transaction/{tenant}]

+ Parameters
    + tenant (string) - ID of existing tenant

+ Request (application/json)
    + Headers

            Accept: application/json

    + Body

            {
                "transfers": [
                    {
                        "credit": {
                            "tenant": "A",
                            "name": "Credit"
                        },
                        "debit": {
                            "tenant": "B",
                            "name": "Debit"
                        },
                        "amount": "1",
                        "currency": "EUR"
                    }
                ]
            }

+ Response 200 (application/json)

        {
            "id": "unique_transaction_id",
            "transfers": [
                {
                    "id": "unique_transfer_id",
                    "valueDate": "2018-03-04T17:08:22Z",
                    "credit": {
                        "tenant": "A",
                        "name": "Credit"
                    },
                    "debit": {
                        "tenant": "B",
                        "name": "Debit"
                    },
                    "amount": "1",
                    "currency": "EUR"
                }
            ]
        }
        
## Search [/search/graphql]

### GraphQL [POST]

**Request Body**
```
fragment accountFields on Account {
    name
    isBalanceCheck
    currency
}

fragment transferFields on Transfer {
    transaction
    id
    status
    amount
    currency
    valueDate
    credit {
        ...accountFields
    }
    debit {
        ...accountFields
    }
}

fragment transactionFields on Transaction {
    id
    status
    transfers {
        ...transferFields
    }
}

query {
    Transfers(tenant: "{tenant_id}") {
        ...transferFields
    }

    Transactions(tenant: "{tenant_id}") {
        ...transactionFields
    }
}
```

+ Request (application/json)
    + Headers

            Accept: application/json

    + Body

            {
                "query": "
                    fragment accountFields on Account {
                        name
                        isBalanceCheck
                        currency
                    }
                    
                    fragment transferFields on Transfer {
                        transaction
                        id
                        status
                        amount
                        currency
                        valueDate
                        credit {
                            ...accountFields
                        }
                        debit {
                            ...accountFields
                        }
                    }
                    
                    fragment transactionFields on Transaction {
                        id
                        status
                        transfers {
                            ...transferFields
                        }
                    }
                    
                    query {
                        Transfers(tenant: \"SEARCH\") {
                            ...transferFields
                        }
                    
                        Transactions(tenant: \"SEARCH\") {
                            ...transactionFields
                        }
                    }
                ",
                "variables": null,
                "operationName": null
            }

+ Response 200 (application/json)

        {
            "data": {
                "Accounts": [
                    {
                        "name": "A",
                        "isBalanceCheck": true,
                        "currency": "EUR"
                    },
                    {
                        "name": "B",
                        "isBalanceCheck": false,
                        "currency": "EUR"
                    }
                ],
                "Transfers": [
                    {
                        "id": "transfer_1_id"
                        "transaction": "transaction_id",
                        "status": "committed",
                        "valueDate": "2018-03-04T17:08:22Z",
                        "credit": {
                            "name": "A",
                            "isBalanceCheck": true,
                            "currency": "EUR"
                        },
                        "debit": {
                            "name": "B",
                            "isBalanceCheck": false,
                            "currency": "EUR"
                        },
                        "amount": "1",
                        "currency": "EUR"
                    }
                ],
                "Transactions": [
                    {   
                        "id": "transaction_id",
                        "status": "committed",
                        "transfers": [
                            {
                                "id": "transfer_1_id"
                                "transaction": "transaction_id",
                                "status": "committed",
                                "valueDate": "2018-03-04T17:08:22Z",
                                "credit": {
                                    "name": "A",
                                    "isBalanceCheck": true,
                                    "currency": "EUR"
                                },
                                "debit": {
                                    "name": "B",
                                    "isBalanceCheck": false,
                                    "currency": "EUR"
                                },
                                "amount": "1",
                                "currency": "EUR"
                            }
                        ]
                    }
                ]
            }
        }