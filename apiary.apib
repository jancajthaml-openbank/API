FORMAT: 1A
HOST: http://private-fe4468-oosbank.apiary-mock.com

# Open Banking API

## Vault [/vault]

### List Existing Tenants [GET /tenant]

+ Response 200 (application/json)

        [
            "A",
            "B
        ]

### Create New Tenant [POST /tenant/{tenant}]

+ Parameters
    + tenant (string) - ID of tenant to be created

+ Response 200 (application/json)
        
        {
        }

### Get Account [GET /account/{tenant}/{account}]

+ Parameters
    + tenant (string) - ID of existing tenant
    + account (string) - ID of existing account

+ Response 200 (application/json)

        {
            "currency": "EUR",
            "balance": "1.000000000000000000000000000000000001",
            "blocking": "-0.000000000000000000000000000000000001",
            "isBalanceCheck": false
        }

### Create New Account [POST /account/{tenant}]

+ Parameters
    + tenant (string) - ID of existing tenant

+ Request (application/json)
    + Headers

            Accept: application/json

    + Body

            {
                "name": "1234",
                "currency": "EUR",
                "isBalanceCheck": true
            }

+ Response 200 (application/json)

        {
        }

## Ledger [/ledger]

### List Existing Tenants [GET /tenant]

+ Response 200 (application/json)

        [
            "A",
            "B
        ]

### Create New Tenant [POST /tenant/{tenant}]

+ Parameters
    + tenant (string) - ID of tenant to be created

+ Response 200 (application/json)
        
        {}

### Create New Transaction [POST /transaction/{tenant}]

+ Parameters
    + tenant (string) - ID of existing tenant

+ Request (application/json)
    + Headers

            Accept: application/json

    + Body

            {
                "transfers": [
                    {
                        "credit": {
                            "tenant": "A",
                            "name": "Credit"
                        },
                        "debit": {
                            "tenant": "B",
                            "name": "Debit"
                        },
                        "amount": "1",
                        "currency": "EUR"
                    }
                ]
            }

+ Response 200 (application/json)

        {
            "id": "unique_transaction_id",
            "transfers": [
                {
                    "id": "unique_transfer_id",
                    "valueDate": "2018-03-04T17:08:22Z",
                    "credit": {
                        "tenant": "A",
                        "name": "Credit"
                    },
                    "debit": {
                        "tenant": "B",
                        "name": "Debit"
                    },
                    "amount": "1",
                    "currency": "EUR"
                }
            ]
        }